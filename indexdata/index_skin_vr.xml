<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.19-pr16">

    
  <!-- Spot Style - Fotografia -->


  <style name="IconFotografia"
         url="%FIRSTXML%/spots/hotspot_image_frame_user_defaultpoint0.png"
         visible="false"
         edge="center"
         onhover="onhoverIconFotografia"
         onout="onoutIconFotografia"


         />
  <action name="onhoverIconFotografia">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconFotografia">
    hideTooltip();



  </action>




    
  <!-- Spot Style - Giro arriba -->


  <style name="IconGiroarriba"
         url="%FIRSTXML%/spots/avanzar__arriba__user_defaultpoint1.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIconGiroarriba"
         onover="onoverIconGiroarriba"
         onout="onoutIconGiroarriba"


         width="150"
         height="prop"
         />
  <action name="onhoverIconGiroarriba">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconGiroarriba">
tween(scale, 1.2);
tween(alpha, 1);

  </action>
  <action name="onoutIconGiroarriba">
    hideTooltip();
    tween(scale, 1);
    tween(alpha, 0.8);

  </action>



    
  <!-- Spot Style - Giro derecho -->


  <style name="IconGiroderecho"
         url="%FIRSTXML%/spots/avanzar__derecha_user_defaultpoint8.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIconGiroderecho"
         onover="onoverIconGiroderecho"
         onout="onoutIconGiroderecho"


         width="180"
         height="prop"
         />
  <action name="onhoverIconGiroderecho">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconGiroderecho">
tween(scale, 1.2);
tween(alpha, 1);

  </action>
  <action name="onoutIconGiroderecho">
    hideTooltip();
    tween(scale, 1);
    tween(alpha, 0.8);

  </action>



    
  <!-- Spot Style - Giro izquierdo 2 -->


  <style name="IconGiroizquierdo2"
         url="%FIRSTXML%/spots/avanzar__izquierda_user_defaultpoint9.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIconGiroizquierdo2"
         onover="onoverIconGiroizquierdo2"
         onout="onoutIconGiroizquierdo2"


         width="180"
         height="prop"
         />
  <action name="onhoverIconGiroizquierdo2">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconGiroizquierdo2">
tween(scale, 1.2);
tween(alpha, 1);

  </action>
  <action name="onoutIconGiroizquierdo2">
    hideTooltip();
    tween(scale, 1);
    tween(alpha, 0.8);

  </action>



    
  <!-- Spot Style - Giro derecho hall  -->


  <style name="IconGiroderechohall"
         url="%FIRSTXML%/spots/avanzar_derecha_hall_user_defaultpoint10.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIconGiroderechohall"
         onover="onoverIconGiroderechohall"
         onout="onoutIconGiroderechohall"


         width="180"
         height="prop"
         />
  <action name="onhoverIconGiroderechohall">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconGiroderechohall">
tween(scale, 1.2);
tween(alpha, 1);

  </action>
  <action name="onoutIconGiroderechohall">
    hideTooltip();
    tween(scale, 1);
    tween(alpha, 0.8);

  </action>



    
  <!-- Spot Style - Giro derecho hall  1 -->


  <style name="IconGiroderechohall1"
         url="%FIRSTXML%/spots/avanzar_derecha_hall_user_defaultpoint11.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIconGiroderechohall1"
         onover="onoverIconGiroderechohall1"
         onout="onoutIconGiroderechohall1"


         width="180"
         height="prop"
         />
  <action name="onhoverIconGiroderechohall1">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconGiroderechohall1">
tween(scale, 1.2);
tween(alpha, 1);

  </action>
  <action name="onoutIconGiroderechohall1">
    hideTooltip();
    tween(scale, 1);
    tween(alpha, 0.8);

  </action>



    
  <!-- Spot Style - Giro izquierdo hall  -->


  <style name="IconGiroizquierdohall"
         url="%FIRSTXML%/spots/avanzar_izquierda_hall_user_defaultpoint12.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIconGiroizquierdohall"
         onover="onoverIconGiroizquierdohall"
         onout="onoutIconGiroizquierdohall"


         width="180"
         height="prop"
         />
  <action name="onhoverIconGiroizquierdohall">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconGiroizquierdohall">
tween(scale, 1.2);
tween(alpha, 1);

  </action>
  <action name="onoutIconGiroizquierdohall">
    hideTooltip();
    tween(scale, 1);
    tween(alpha, 0.8);

  </action>



    
  <!-- Spot Style - Giro arriba Pequeno -->


  <style name="IconGiroarribaPequeno"
         url="%FIRSTXML%/spots/avanzar__arriba__user_defaultpoint3.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIconGiroarribaPequeno"
         onover="onoverIconGiroarribaPequeno"
         onout="onoutIconGiroarribaPequeno"


         width="80"
         height="prop"
         />
  <action name="onhoverIconGiroarribaPequeno">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconGiroarribaPequeno">
tween(scale, 1.2);
tween(alpha, 1);

  </action>
  <action name="onoutIconGiroarribaPequeno">
    hideTooltip();
    tween(scale, 1);
    tween(alpha, 0.8);

  </action>



    
  <!-- Spot Style - Giro arriba Pequeno Little -->


  <style name="IconGiroarribaPequenoLittle"
         url="%FIRSTXML%/spots/avanzar__arriba__user_defaultpoint4.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIconGiroarribaPequenoLittle"
         onover="onoverIconGiroarribaPequenoLittle"
         onout="onoutIconGiroarribaPequenoLittle"


         width="50"
         height="prop"
         />
  <action name="onhoverIconGiroarribaPequenoLittle">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconGiroarribaPequenoLittle">
tween(scale, 1.2);
tween(alpha, 1);

  </action>
  <action name="onoutIconGiroarribaPequenoLittle">
    hideTooltip();
    tween(scale, 1);
    tween(alpha, 0.8);

  </action>



  <action name="displayImage">
    if (layer[displayedStandardImage],
      if(layer[displayedStandardImage].doNotDeleteMe,
        set(layer[displayedStandardImage].currentCall, false);
        set(layer[displayedStandardImage].doNotDeleteMe, false);
        
        if (%1 == layer[displayedStandardImage].url,
          applyDisplayedImageObjectAnimation(%8);
        ,
          setDisplayedImageObjectParameters(%1, %2, %3, %4, %5, %6, %7, %8, %9, %10);
        );
      ,
        set(layer[displayedStandardImage].currentCall, false);
        set(layer[displayedStandardImage].doNotDeleteMe, true);
        events.dispatch(onremovedisplayedobject);
        delayedcall(0.2,displayImage(%1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12););
      );
    ,
      if(%10,
        addlayer(displayedStandardImageOverlay);
        set(layer[displayedStandardImageOverlay].keep, false);
        set(layer[displayedStandardImageOverlay].width, 100%);
        set(layer[displayedStandardImageOverlay].height, 100%);
        set(layer[displayedStandardImageOverlay].type, container);
        set(layer[displayedStandardImageOverlay].zorder, 98);
        set(layer[displayedStandardImageOverlay].visible, false);
        set(layer[displayedStandardImageOverlay].onclick, applyDisplayedImageObjectAnimation(%8););
        set(layer[displayedStandardImageOverlay].bgcolor, "0x%11");
        set(layer[displayedStandardImageOverlay].bgalpha, %12);
        set(layer[displayedStandardImageOverlay].bgcapture, true);
      );
      addlayer(displayedStandardImage);
      set(layer[displayedStandardImage].keep, false);
      set(layer[displayedStandardImage].onclick, applyDisplayedImageObjectAnimation(%8););
      set(layer[displayedStandardImage].zorder , 99);
      set(layer[displayedStandardImage].currentCall, true);
      set(layer[displayedStandardImage].doNotDeleteMe, true);
      set(layer[displayedStandardImage].onloaded, resizeDisplayedImageObject());
      events.dispatch(onremovedisplayedobject);
      delayedcall(0.2,displayImage(%1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12););
      set(layer[displayedStandardImage].visible, false);
    );
  </action>
  <action name="applyDisplayedImageObjectAnimation">resumeautorotation(forcehotspot);

    if (%1,
      stoptween(layer[displayedStandardImage].width, layer[displayedStandardImage].height);
      tween(layer[displayedStandardImage].width|layer[displayedStandardImage].height, 1|1, 1, easeOutQuad, WAIT);
      if(layer[displayedStandardImage].overlay,removelayer(displayedStandardImageOverlay););removelayer(displayedStandardImage);
    ,
      if(layer[displayedStandardImage].overlay,removelayer(displayedStandardImageOverlay););removelayer(displayedStandardImage);
    );
  </action>
  <action name="setDisplayedImageObjectParameters">
    set(layer[displayedStandardImage].url       , %1);
    set(layer[displayedStandardImage].align     , %2);
    set(layer[displayedStandardImage].x         , %3);
    set(layer[displayedStandardImage].y         , %4);
    set(layer[displayedStandardImage].imgwidth  , %5);
    set(layer[displayedStandardImage].imgheight , %6);
    set(layer[displayedStandardImage].animated  , %8);
    set(layer[displayedStandardImage].applyratio, %9);
    set(layer[displayedStandardImage].overlay   , %10);
    if (%7,pauseautorotation(forcehotspot);
);
  </action>
  <action name="resizeDisplayedImageObject">
    if(layer[displayedStandardImage].url,
    set(layer[displayedStandardImage].fullwidth, get(layer[displayedStandardImage].width));
    set(layer[displayedStandardImage].fullheight, get(layer[displayedStandardImage].height));
    if(layer[displayedStandardImage].animated,
      set(layer[displayedStandardImage].width , 1);
      set(layer[displayedStandardImage].height, 1);
    );
    if(layer[displayedStandardImage].imgwidth != "" AND layer[displayedStandardImage].imgheight != "",
      if(layer[displayedStandardImage].imgwidth == "prop",
        set(tempDisplayedImageObjectHeight, get(layer[displayedStandardImage].imgheight));
        indexoftxt(tempDisplayedImageObjectHeightPercent, get(tempDisplayedImageObjectHeight), "%");
        if(tempDisplayedImageObjectHeightPercent GT 0,
          txtreplace(tempDisplayedImageObjectHeight, '%', '');
          mul(tempDisplayedImageObjectHeight, get(stageheight));
          div(tempDisplayedImageObjectHeight, 100);
          Math.round(tempDisplayedImageObjectHeight);
        );
        mul(flyingImgWidth,get(layer[displayedStandardImage].fullwidth),get(tempDisplayedImageObjectHeight));
        div(flyingImgWidth,get(layer[displayedStandardImage].fullheight));
        Math.round(flyingImgWidth);
        set(layer[displayedStandardImage].imgwidth , get(flyingImgWidth));
        set(layer[displayedStandardImage].imgheight, get(tempDisplayedImageObjectHeight));
      ,
        if(layer[displayedStandardImage].imgheight == "prop",
          set(tempDisplayedImageObjectWidth, get(layer[displayedStandardImage].imgwidth));
          indexoftxt(tempDisplayedImageObjectWidthPercent, get(tempDisplayedImageObjectWidth), "%");
          if(tempDisplayedImageObjectWidthPercent GT 0,
            txtreplace(tempDisplayedImageObjectWidth, '%', '');
            mul(tempDisplayedImageObjectWidth, get(stagewidth));
            div(tempDisplayedImageObjectWidth, 100);
            Math.round(tempDisplayedImageObjectWidth);
          );
          mul(flyingImgHeight,get(layer[displayedStandardImage].fullheight),get(tempDisplayedImageObjectWidth));
          div(flyingImgHeight,get(layer[displayedStandardImage].fullwidth));
          Math.round(flyingImgHeight);
          set(layer[displayedStandardImage].imgwidth , get(tempDisplayedImageObjectWidth));
          set(layer[displayedStandardImage].imgheight , get(flyingImgHeight));
        ,
          set(tempDisplayedImageObjectWidth, get(layer[displayedStandardImage].imgwidth));
          set(tempDisplayedImageObjectHeight, get(layer[displayedStandardImage].imgheight));
          indexoftxt(tempDisplayedImageObjectWidthPercent, get(tempDisplayedImageObjectWidth), "%");
          indexoftxt(tempDisplayedImageObjectHeightPercent, get(tempDisplayedImageObjectHeight), "%");
          if(tempDisplayedImageObjectWidthPercent GT 0,
            txtreplace(tempDisplayedImageObjectWidth, '%', '');
            mul(tempDisplayedImageObjectWidth, get(stagewidth));
            div(tempDisplayedImageObjectWidth, 100);
            Math.round(tempDisplayedImageObjectWidth);
          );
          if(tempDisplayedImageObjectHeightPercent GT 0,
            txtreplace(tempDisplayedImageObjectHeight, '%', '');
            mul(tempDisplayedImageObjectHeight, get(stageheight));
            div(tempDisplayedImageObjectHeight, 100);
            Math.round(tempDisplayedImageObjectHeight);
          );
          set(layer[displayedStandardImage].imgwidth , get(tempDisplayedImageObjectWidth));
          set(layer[displayedStandardImage].imgheight, get(tempDisplayedImageObjectHeight));
        );
      );
    ,
      set(layer[displayedStandardImage].imgwidth , get(layer[displayedStandardImage].fullwidth));
      set(layer[displayedStandardImage].imgheight, get(layer[displayedStandardImage].fullheight));
    );
    
    set(resizedwidth, get(layer[displayedStandardImage].imgwidth));
    set(resizedheight, get(layer[displayedStandardImage].imgheight));
    if(layer[displayedStandardImage].applyratio,
      sub(resizedstagewidth, get(stagewidth), get(layer[displayedStandardImage].x));
      sub(resizedstageheight, get(stageheight), get(layer[displayedStandardImage].y));
      Math.abs(resizedstagewidth);
      Math.abs(resizedstageheight);
      if(resizedwidth GT resizedstagewidth,
        mul(tempresizedheight, get(resizedheight), get(resizedstagewidth));
        div(tempresizedheight, get(resizedwidth));
        Math.round(tempresizedheight);
        set(resizedwidth, get(resizedstagewidth));
        set(resizedheight, get(tempresizedheight));
      );
      if(resizedheight GT resizedstageheight,
        mul(tempresizedwidth, get(resizedwidth), get(resizedstageheight));
        div(tempresizedwidth, get(resizedheight));
        Math.round(tempresizedwidth);
        set(resizedheight, get(resizedstageheight));
        set(resizedwidth, get(tempresizedwidth));
      );
    );
    
    if(layer[displayedStandardImage].animated,
      set(layer[displayedStandardImage].animated, false);
      tween(layer[displayedStandardImage].width , get(resizedwidth), 1, easeOutQuad);
      tween(layer[displayedStandardImage].height, get(resizedheight), 1, easeOutQuad);
    ,
      set(layer[displayedStandardImage].width , get(resizedwidth));
      set(layer[displayedStandardImage].height, get(resizedheight));
    );
    if(layer[displayedStandardImage].overlay,set(layer[displayedStandardImageOverlay].visible, true););
    set(layer[displayedStandardImage].visible, true);
    ,
      delayedcall(0.2,resizeDisplayedImageObject(););
    );
  </action>
  <events name="displayedImageObjectEvents" keep="true" onremovedisplayedobject="displayedImageObjectOnRemoveDisplayedObject" onresize="if(layer[displayedStandardImage],resizeDisplayedImageObject());" />
  <action name="displayedImageObjectOnRemoveDisplayedObject">
    ifnot(layer[displayedStandardImage].currentCall,if(layer[displayedStandardImage].visible,resumeautorotation(forcehotspot);

      if(layer[displayedStandardImage].overlay,removelayer(displayedStandardImageOverlay););
      removelayer(displayedStandardImage);
    ););
  </action>


</krpano>